#Building ELKStack 7.x for logging and monitoring and billing on CENTOS7.6  


#Elasticsearch depends on Java 
$ sudo yum -y install java-openjdk-devel java-openjdk

#Add ELK stack repository which provides all ELK stack OSS packages.

$ sudo cat <<EOF | sudo tee /etc/yum.repos.d/elasticsearch.repo
[elasticsearch-7.x]
name=Elasticsearch repository for 7.x packages
baseurl=https://artifacts.elastic.co/packages/oss-7.x/yum
gpgcheck=1
gpgkey=https://artifacts.elastic.co/GPG-KEY-elasticsearch
enabled=1
autorefresh=1
type=rpm-md
EOF

#Clear and update YUM package index.
$ sudo yum clean all
$ sudo yum makecache

#Import GPG key.
$ sudo rpm --import https://artifacts.elastic.co/GPG-KEY-elasticsearch

#Install Open Source Version of the ELKStack 
$ sudo yum -y install elasticsearch-oss
$ sudo yum -y install logstash-oss
$ sudo yum -y install kibana-oss

#Confirm package install
$ rpm -qi elasticsearch-oss 
$ rpm -qi logstash-oss
$ rpm -qi kibana-oss

#Start and enable persistant services for eleasticsearch 
$ sudo systemctl daemon-reload
$ sudo systemctl enable elasticsearch.service
$ sudo systemctl start elasticsearch.service

#Test REST interface with curl. 
$ curl http://127.0.0.1:9200 

#Start and enable persistant services for logstash
$ sudo systemctl start logstash.service
$ sudo systemctl status logstash.service
$ sudo systemctl enable logstash.service

#Custom INPUT/FILTER/OUPUT logstash config files go into this directory. 
$ cd /etc/logstash/conf.d/

#To monitor OPENSTACK networking with OpenVswitch we will need to add a 
#plugin to gather information for the SDN switch.
$ /usr/share/logstash/bin/logstash-plugin install logstash-codec-sflow

#NOTE: These files have to pass a syntax check, if they have any problem it
#will stop entire losgstash system from working so do not put just any file
#in here unless it passes this test.
/usr/share/logstash/bin/logstash -t -f <LOGSTASH CONFIG FILE>

#Create conf file for sflow in tmp directory and test it ,then if OK copy it to conf directory.
#NOTE: This file has errors in it! Using it as a test. You will have to change the paratheses 
#to the correct ones from “ to ".
 
sudo cat <<EOF | sudo tee /tmp/sflow.conf
input {
udp {
port => 6343
codec => sflow {}
}
}

output {
elasticsearch {
index => “sflow-%{+YYYY.MM.dd}”
hosts => [“localhost”]
}
stdout {
codec => rubydebug }
}
EOF

#Run test on config file and do not proceed to next step until fixed and says OK
$ /usr/share/logstash/bin/logstash -t -f /tmp/sflow.conf
# copy file to conf directory now that it has passed test. 
$ cp /tmp/sflow.conf /etc/logstash/conf.d/



#Edit Kibana YAML config for your system and use local elasticsearch server.  
sudo vim /etc/kibana/kibana.yml

 server.port: 5601
 server.host: "192.168.1.29"
 server.name: "packstack"
 elasticsearch.url: "http://localhost:9200"
 
#Start and enable persistant services for Kibana
sudo systemctl enable --now kibana


#Packstack IPTABLES will block Kibana access, so we need to open this port.
#Check the line numbers for all of the rules that were added by Packstack.
#Look for the the last rule before any DENY or REJECT rules as putting any
#rules after these will make them useless.
$ sudo iptables -L --line-numbers
# Should be ok to insert a rule at line 30 or before. We will put it at the end.
$ sudo iptables -I INPUT 30 -p tcp -m multiport --dports 5601 -j ACCEPT -m comment --comment "Kibana 5601 incoming"
#Save state of IPTABLES
$ service iptables save
# Now you can start your browser and load the URL on your desktop system.
$ elinks http://192.168.1.29:5601    


#Install Open Source edge computing monitors. These are lightweight servers that 
#will run on VM's and ship data to Elasticsearch service node.
#We will install them on the host server to test and use them locally. 
sudo yum -y install filebeat auditbeat metricbeat packetbeat heartbeat-elastic


#Reason for using an ELKSTACK is for billing,monitoring and tracing to subvert problems
#when they occur in real world situations. So next I will setup monitors for  
#OpenVswitch,Apache and basic bare metal systems health checks on controller/compute
#node that the ELKSTACK and OPENSTACK are hosted on.

