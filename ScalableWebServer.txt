Prologue:

OpenStack Scalable Web Serice. 

1 Jump Server , 1 Mysql server , 1 Web Service.

This will install these three basic componets.

Will later show how to add more MYSQL and APACHE service nodes on demand. 

Would also like to show measurement when weakness creeps into system creating
the need for each of these expansion.

This will be working with a Packstack install.  

Will use 1 vcpu/Ram 2G/20G for jump server. This will be a minimal setup for ssh access from outside private.

Will use 1 vcpu/Ram 2G/20G for web service. Will have a Apache2/Mediawiki/Wordpress/Myphpadmin setup.

Will use 1 vcpu/Ram 2G/20G for mysql service. MariaDB Database Setup.

Will have another setup for installing and adding Cinder and its volumes for adding space as needed.

The setup and templates I will be using are on my github ending with .ci for CloudInit.

[1] Start VirtualBox and start the CENTOS7.6 image that had been created with. 
    https://github.com/icarusfactor/openstack-Installs/blob/master/PackStack-AllInOne-CentOS7.6 

[2] #Start SSH session with tunnel to pipe the Horizon web vew to local desktop.
    sudo ssh -L 9999:10.0.2.1:9999 root@192.168.1.29
    #Start browser and point to:
    http://127.0.0.1:9999
[3]    
    #As root load environment with your keystone adminrc creditials.
    cat /root/keystonerc_admin
    . ./keystonerc_admin

[4] Login as admin to a clean openstack install we will need to add
    * Basic non admin user
    * Tentant
    * Project : Scalable Web Server.
    * Operating System Image
    * Will use "Default" domain so not needed to add another.
    We will perform the following commands with "neutron" and not "Horizon" or "openstack", this is
    becasue its being deprecated and will be moved to a streamlines openstack CLI interface in the near future. But currently I could not find a method to do this otherwise.  
    
[5] Create flat external network:
    #A flat network will work with a normal home setup.  
    neutron net-create OCEANUS --provider:network_type flat --provider:physical_network extnet  --router:external    

[6] Create external subnet:
    #Disabling external DHCP becasue it would interfere with DHCP on the Internet router. 
    #The first two DNS servers are Google's the third is the faster one as its a root DNS NASA server.    
    neutron subnet-create --name RIVERS --enable_dhcp=False --allocation-pool=start=192.168.1.100,end=192.168.1.200                         --gateway=192.168.1.1 OCEANUS 192.168.1.0/24 --dns-nameserver 8.8.8.8 --dns-nameserver 8.8.4.4 --dns-nameserver 192.203.230.10    
    
[7] Create non admin user planner     
    openstack project create --enable "Scalable Web Service"
    openstack user create --project "Scalable Web Service" --password easypassword --enable planner
    
[8] Create user environment.
 
    export OS_USERNAME=planner
    export OS_TENANT_NAME="Scalable Web Service"
    export OS_PASSWORD=easypassword
    export OS_PROJECT_NAME="Scalable Web Service"
    
     
[9] Create router as non-admin user attach it to external network create by admin.

  neutron router-create LIMBO
  neutron router-gateway-set LIMBO OCEANUS  

[10] Create Private network , attach local subnet
  
  neutron net-create ELYSIUM
  neutron subnet-create --name FIELDS ELYSIUM 10.0.2.0/24 --dns-nameserver 8.8.8.8 --dns-nameserver 8.8.4.4 --dns-nameserver 192.203.230.10

[11] Add router interface to private subnet.  
  neutron router-interface-add LIMBO FIELDS
  
[12] To finalize above step login to HORIZON web GUI as admin and add user planner to Scalable Web Service  project. 

[13] Log into Horizon gui as non-admin user planner.

[14] #Verify network setup.
     #Project -> Network -> Network Topology
     #You should see your external and internal network and router. 
     
[15] #Load Operating systems cloud image.   
     Select Project -> Compute -> Images
     image Name  : Deb9Server
     Browse      : debian-9-openstack-amd64.qcow2   <--- basic minimal debian install. 
     Format      : qcow2
     Create Image. 
     Wait for "Deb9Server" to become "Active".
     We will use this image as basis of all the node operating systems and apply a specific
     cloud init file to each to give it its profile. 
     
[16] Import Public Key.     
     Project -> Compute -> Key Pairs
     + Import Public Key
     #on your local system cat your public key and copy and paste.
     cat ./id_rsa.pub

[17] Create Security Group.
     PROJECT -> NETWORK -> Security Groups:
     
     +Create Security Group
     Group Name: JUMP
     Description : Access Point SSH=EX + INT
     
     Select Manage Rules
     Add ICPM Egress and Ingress
     Add TCP SSH 
     
     +Create Security Group
     Group Name: SQL
     Description : Database Server ICPM+MYSQL+SSH=INT
     
     Select Manage Rules
     Add ICPM Ingress
     Add TCP SSH 
     ADD MYSQL
     
     +Create Security Group
     Group Name: WEB
     Description : Web Server HTTP=INT + EX  SSH=INT  
     
     Select Manage Rules
     Add ICPM Ingress Egress
     Add TCP SSH 
     Add HTTP custom TCP port 8080   <--- This can be routed back to port 80 for Internet, or left as proxy.

     
     NOTE: #If it takes too long to install instances you can
           #watch the install of the server with command on
           #the cloud instance.
           tail -f /var/log/cloud-init-output.log 
           #Dashboard also has a log viewer click the full
           #log option and keep it refreshed. Also, be sure
           #to update your ISO image if you want less time
           #for updating packages. 
     
           #Basic debian cloud image.
           https://cdimage.debian.org/cdimage/openstack/current/
     
           #TEST IMAGE:
           #Excellent to test basic network. 
           #No SSH key needed.Will post its 
           #username and password at login.
           http://download.cirros-cloud.net/

    
     
[18] Install JUMP server.      
     Project -> Compute -> Instances
     Select Launch
     Launch Instance
     Instance Name JUMP
     Description: ACCESS POINT
     NEXT
     Select minimal Debian image.
     NEXT
     Select m1.small  1 vcpu 2Gig RAM 20gig space.
     NEXT
     Select ELYSIUM Private Network. 
     #NEXT until Security Groups
     Deselect default.
     Select JUMP
     NEXT
     Select MERCURY public key
     NEXT
     Copy and paste JUMP Server Cloud Init file .
     https://raw.githubusercontent.com/icarusfactor/openstack-Installs/master/JUMPSERVER_DEBIAN_9.ci
     LAUNCH INSTANCE
     Select Associate Floating IP from drop down.
     Click the Plus on IP address to generate a legal IP address. 
     Pool should be from OCEANUS
     Description: ACCESS POINT 
     Allocate IP. Then Associate IP.
     #The floating IP address should appear in your Jump Servers' IP address column. 
 
[19] Install SQL server.      
     Project -> Compute -> Instances
     Select Launch
     Launch Instance
     Instance Name SQL
     Description: DATABASE SERVER
     NEXT
     Select minimal Debian image.
     NEXT
     Select m1.small  1 vcpu 2Gig RAM 20gig space.
     NEXT
     Select ELYSIUM Private Network. 
     #NEXT until Security Groups
     Deselect default.
     Select SQL
     NEXT
     Select MERCURY public key
     NEXT
     Copy and paste JUMP Server Cloud Init file .
     https://raw.githubusercontent.com/icarusfactor/openstack-Installs/master/SQLSERVER_DEBIAN_9.ci
     LAUNCH INSTANCE
     
[20] Install WEB server.      
     Project -> Compute -> Instances
     Select Launch
     Launch Instance
     Instance Name SQL
     Description: WEB SERVER
     NEXT
     Select minimal Debian image.
     NEXT
     Select m1.small  1 vcpu 2Gig RAM 20gig space.
     NEXT
     Select ELYSIUM Private Network. 
     #NEXT until Security Groups
     Deselect default.
     Select WEB
     NEXT
     Select MERCURY public key
     NEXT
     Copy and paste JUMP Server Cloud Init file .
     https://raw.githubusercontent.com/icarusfactor/openstack-Installs/master/WEBSERVER_DEBIAN_9.ci
     LAUNCH INSTANCE
     Select Associate Floating IP from drop down.
     Click the Plus on IP address to generate a legal IP address. 
     Pool should be from OCEANUS
     Description: WEB  
     Allocate IP. Then Associate IP.
     #The floating IP address should appear in your Jump Servers' IP address column.        
    
[21] Now all nodes are setup and have uploaded your public key,mine wass called MERCURY
     to the servers via cloud-init and a JUMP server to log into as a central server to
     reduce port activty and manage connections. But to do this you will have to setup 
     SSH on the JUMP instance as a FORWARDER. 
     
[22] Log onto JUMP instance:
     
     cat /etc/ssh_config
      # Print out the /etc/ssh_config file
      Host *
      SendEnv LANG LC_*
      ForwardAgent no
      
       If you see the following, you will need to comment out the ForwardAgent.
     This will override your home directory config if so.
     
[23]    
     touch ~/.ssh/config
     Host *
     ForwardAgent yes
     
     #Restart ssh server.
     service sshd restart
     
     #No arguments will add default keys. 
     ssh-add 
     
     #List keys to check 
     ssh-add -L 
     
     #You can log out and back in with SSH with -A to enable forwading.
     ssh -A debian@192.168.1.100
     
     #Now you should be able to log into all of the internal IPs from 
     #the jumpbox with your host box SSH key and keep only the JUMP box 
     #port open from the 192.168.1.x addresses. 
     
     
     
     
     
      
     

